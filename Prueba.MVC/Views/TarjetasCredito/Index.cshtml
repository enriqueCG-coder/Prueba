@{
    ViewBag.Title = "TarjetasCredito";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item">Opciones</li>
    <li class="breadcrumb-item active">Listado de Tarjetas</li>
</ol>

<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table me-1"></i> Listado de Tarjetas
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-3">
                <button class="btn btn-success" type="button" onclick="abrirModal(null)"><i class="fas fa-plus"></i> Nueva Tarjeta</button>
            </div>

            <div class="col-sm-1">
            </div>

            <div class="col-sm-1">
                
            </div>

            <div class="col-sm-7">
                <i class="fas fa-info-circle"></i>
                <p>Antes de registrar una nueva tarjeta copie el id del titular que la solicita, en la pantalla de titulares</p>
            </div>
        </div>

        <hr />
        <table id="tabla" class="display responsive" style="width:100%">
            <thead>
                <tr>
                    <th>Número de Tarjeta</th>
                    <th>Nombres</th>
                    <th>Apellidos</th>
                    <th>Estado</th>
                    <th>Opciones administrables</th>
                    <th>Acciones con tarjeta</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="exampleModalLabel">Registro para tarjeta de crédito</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="txtIdTarjeta" type="hidden" name="idTarjetaCredito"/>
                <form id="formNivel">
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtIdTitular">Id Titular</label>
                                <input type="number" class="form-control required" id="txtIdTitular" name="idTitularTarjeta" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtNumero">Número de tarjeta</label>
                                <input type="number" class="form-control required" id="txtNumero" name="numeroTarjeta" autocomplete="off">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtSaldoActual">Saldo Actual</label>
                                <input type="number" readonly step="0.01" min="0" placeholder="0.00" class="form-control required" id="txtSaldoActual" name="saldoActual" autocomplete="off">
                            </div>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtPorcentIntSaldoMin">interés saldo mínimo (%)</label>
                                <input type="number" step="0.01" min="0" placeholder="0.00" class="form-control required" id="txtPorcentIntSaldoMin" name="porcentIntSaldoMin" autocomplete="off">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtSaldoDisp">Saldo disponible</label>
                                <input type="number" readonly step="0.01" min="0" placeholder="0.00" class="form-control required" id="txtSaldoDisp" name="saldoDisponible" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtPorcentInteres">intereses (%)</label>
                                <input type="number" step="0.01" min="0" placeholder="0.00" class="form-control required" id="txtPorcentInteres" name="porcentInteres" autocomplete="off">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="txtLimiteCred">Límite crediticio</label>
                                <input type="number" step="0.01" min="0" placeholder="0.00" class="form-control required" id="txtLimiteCred" name="limiteCredito" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <div class="form-group">
                                <label for="cboEstado">Estado</label>
                                <select id="cboEstado" class="form-select">
                                    <option value="1">Activo</option>
                                    <option value="0">No Activo</option>
                                </select>
                            </div>
                        </div>
                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-success" onclick="guardarTarjeta()">Guardar</button>
            </div>
        </div>
    </div>
</div>


<!---->

@section scripts{

    <script>
    var tabladata;

    $(document).ready(function () {
        cargar(); 
    });

    function redirigirCompras(idTarjetaCredito) {
        window.location.href = `/Compra/Index?idTarjetaCredito=${idTarjetaCredito}`;
    }

    function redirigirPagos(idTarjetaCredito) {
        window.location.href = `/Pago/Index?idTarjetaCredito=${idTarjetaCredito}`;
    }
    
    function redirigirTransacciones(idTarjetaCredito) {
        window.location.href = `/Transacciones/Index?idTarjetaCredito=${idTarjetaCredito}`;
    }

    function redirigirEstadoCuenta(idTarjetaCredito) {
        window.location.href = `/Transacciones/EstadoCuenta?idTarjetaCredito=${idTarjetaCredito}`;
    }

    // Método para cargar datos en la tabla
    function cargar() {
    tabladata = $('#tabla').DataTable({
        responsive: true,
        "ajax": {
            "url": 'https://localhost:7069/api/TarjetaCred/GetTarjetas',
            "type": "GET",
            "datatype": "json",
            "dataSrc": "" ,
            "beforeSend": function () {
                Swal.fire({
                    title: 'Cargando...',
                    text: 'Por favor espera mientras se cargan los datos.',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
            }
        },
        "columns": [
            { "data": "numeroTarjeta" },
            { "data": "nombres" },
            { "data": "apellidos" },
            
            {
                "data": "estado",
                "render": function (data) {
                    return data ?
                        '<span class="badge bg-success">Activo</span>' :
                        '<span class="badge bg-danger">No Activo</span>';
                }
            },
            {
                "data": "idTarjetaCredito",
                "render": function (data, type, row, meta) {
                    return `
                        <div class="d-flex align-items-center">
                            
                            <button class="btn btn-warning btn-editar btn-sm me-2" 
                                    data-informacion='${JSON.stringify(row)}' 
                                    title="Editar Tarjeta">
                                <i class="fas fa-pen"></i>
                            </button>
                            <button class="btn btn-danger btn-eliminar btn-sm" 
                                    data-informacion='${JSON.stringify(row)}' 
                                    title="Eliminar Tarjeta">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>`;
                },

                "orderable": false,
                "searchable": false,
                "width": "90px"
            },
            {
                "data": "idTarjetaCredito",
                "render": function (data, type, row, meta) {
                    return `
                        <div class="d-flex justify-content-start align-items-center">
                            <button class="btn btn-primary btn-transacciones btn-sm me-2" 
                                    data-informacion='${JSON.stringify(row)}' 
                                    title="Estado de cuenta de tarjeta"
                                    onclick="redirigirEstadoCuenta(${data});">
                                <i class="fas fa-chart-bar"></i>
                            </button>
                            <button class="btn btn-success btn-compra btn-sm me-2" 
                                    title="Compras"
                                    onclick="redirigirCompras(${data});">
                                <i class="fas fa-shopping-cart"></i>
                            </button>
                            <button class="btn btn-info btn-pago btn-sm me-2" 
                                    data-informacion='${JSON.stringify(row)}' 
                                    title="Pagos"
                                    onclick="redirigirPagos(${data});">
                                <i class="fas fa-wallet"></i>
                            </button>
                            <button class="btn btn-secondary btn-transacciones btn-sm" 
                                    data-informacion='${JSON.stringify(row)}' 
                                    title="Transacciones de Tarjeta"
                                    onclick="redirigirTransacciones(${data});">
                                <i class="fas fa-file-invoice"></i>
                            </button>
                        </div>`;
                }
            }

        ],
        "language": {
            "url": "//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json"
        },
        "preXhr": function () {
            Swal.fire({
                title: 'Cargando...',
                text: 'Por favor, espera mientras se cargan los datos.',
                allowOutsideClick: false,
                showConfirmButton: false,
                willOpen: () => {
                    Swal.showLoading();
                }
            });
        },
        "xhr": function () {
            Swal.close();
        },
        "initComplete": function (settings, json) {
            Swal.fire({
                title: 'Datos Cargados',
                text: 'Los datos se han cargado correctamente en la tabla.',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }
    });
        $(document).on('click', '.btn-editar', function () {
            var json = $(this).data("informacion");
            abrirModal(json);
        });

        $(document).on('click', '.btn-eliminar', function () {
            var json = $(this).data("informacion");
            eliminar(json.idTitularTarjeta);
        });
    }

    // Método para abrir el modal con los datos a editar
   function abrirModal(json) {
        // Verifica si json es un objeto válido
        if (json && typeof json === 'object') {
            $("#txtIdTarjeta").val(json.idTarjetaCredito || 0);
            $("#txtIdTitular").val(json.idTitularTarjeta || 0);
            $("#txtNumero").val(json.numeroTarjeta || 0);
            $("#txtSaldoActual").val(json.saldoActual !== undefined ? json.saldoActual.toFixed(2) : '0.00');
            $("#txtLimiteCred").val(json.limiteCredito !== undefined ? json.limiteCredito.toFixed(2) : '0.00');
            $("#txtSaldoDisp").val(json.saldoDisponible !== undefined ? json.saldoDisponible.toFixed(2) : '0.00');
            $("#txtPorcentInteres").val(json.porcentInteres !== undefined ? json.porcentInteres.toFixed(2) : '0.00');
            $("#txtPorcentIntSaldoMin").val(json.porcentIntSaldoMin !== undefined ? json.porcentIntSaldoMin.toFixed(2) : '0.00');

            // Manejo seguro de json.estado
            $("#cboEstado").val(json.estado !== undefined ? (json.estado ? 1 : 0) : 0);
        } else {
            // Manejo cuando json es null o undefined
            console.error("El objeto json es null, undefined, o no es un objeto");
            $("#txtIdTarjeta").val(0);
            $("#txtIdTitular").val(0);
            $("#txtNumero").val(0);
            $("#txtSaldoActual").val('0.00');
            $("#txtLimiteCred").val('0.00');
            $("#txtSaldoDisp").val('0.00');
            $("#txtPorcentInteres").val('0.00');
            $("#txtPorcentIntSaldoMin").val('0.00');
            $("#cboEstado").val(0); // Valor por defecto para estado
        }

        $('#FormModal').modal('show');
    }


    // Método para guardar o actualizar datos
    function guardarTarjeta() {
        // Obtén los valores de los campos del formulario
        var idTarjetaCredito = $("#txtIdTarjeta").val();
        var idTitularTarjeta = $("#txtIdTitular").val();
        var numeroTarjeta = $("#txtNumero").val();
        var saldoActual = parseFloat($("#txtSaldoActual").val()) || 0.00;
        var limiteCredito = parseFloat($("#txtLimiteCred").val()) || 0.00;
        var porcentInteres = parseFloat($("#txtPorcentInteres").val()) || 0.00;
        var porcentIntSaldoMin = parseFloat($("#txtPorcentIntSaldoMin").val()) || 0.00;
        var estado = parseInt($("#cboEstado").val()) === 1;

        // Calcula el saldo disponible
        var saldoDisponible = limiteCredito - saldoActual;

        $("#txtSaldoDisp").val(saldoDisponible.toFixed(2));

        // Crea el objeto request con todos los datos necesarios
        var request = {
            idTarjetaCredito: idTarjetaCredito ? parseInt(idTarjetaCredito) : 0,
            idTitularTarjeta: idTitularTarjeta ? parseInt(idTitularTarjeta) : 0,
            numeroTarjeta: numeroTarjeta,
            saldoActual: saldoActual,
            limiteCredito: limiteCredito,
            saldoDisponible: saldoDisponible,
            porcentInteres: porcentInteres,
            porcentIntSaldoMin: porcentIntSaldoMin,
            estado: estado
        };

        // Determina la URL y el método HTTP según si hay un idTarjetaCredito
        var url = idTarjetaCredito > 0 ? `https://localhost:7069/api/TarjetaCred/PutTarjeta/${idTarjetaCredito}` : 'https://localhost:7069/api/TarjetaCred/PostTarjetasCred';
        var method = idTarjetaCredito > 0 ? "PUT" : "POST";

        // Realiza la solicitud AJAX
        jQuery.ajax({
            url: url,
            type: method,
            data: JSON.stringify(request),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data) {
                    // Recarga la tabla de datos si es necesario
                    tabladata.ajax.reload();
                    $('#FormModal').modal('hide');
                    Swal.fire({
                        title: '¡Éxito!',
                        text: 'Los cambios se han guardado correctamente.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: 'No se pudo guardar los cambios.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
                Swal.fire({
                    title: 'Error',
                    text: 'Ocurrió un error al procesar la solicitud: ' + xhr.responseText,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    }


    // Método para eliminar un registro
    function eliminar(idTarjetaCredito) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "¡No podrás revertir esto!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, eliminar'
        }).then((result) => {
            if (result.isConfirmed) {
                jQuery.ajax({
                    url: 'https://localhost:7069/api/TarjetaCred/DeleteTarjeta/' + idTarjetaCredito,
                    type: "DELETE",
                    success: function (data) {
                        if (data) {
                            tabladata.ajax.reload();

                            Swal.fire(
                                'Eliminado!',
                                'El registro ha sido eliminado.',
                                'success'
                            );

                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: 'No se pudo eliminar el registro.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr.responseText);

                        Swal.fire({
                            title: 'Error',
                            text: 'Ocurrió un error al eliminar el registro: ' + xhr.responseText,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }
        });
    }

</script>
}